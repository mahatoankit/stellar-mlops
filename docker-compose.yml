services:
  # MariaDB ColumnStore Database
  mariadb-columnstore:
    image: mariadb/columnstore:latest
    container_name: stellar-mariadb
    ports:
      - "3306:3306"
    environment:
      MARIADB_ROOT_PASSWORD: stellar_password
      MARIADB_DATABASE: stellar_db
      MARIADB_USER: stellar_user
      MARIADB_PASSWORD: stellar_user_password
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pstellar_password"]
      timeout: 20s
      retries: 10

  # PostgreSQL Database for Airflow
  postgres:
    image: postgres:13
    container_name: stellar-postgres
    environment:
      POSTGRES_DB: airflow_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin", "-d", "airflow_db"]
      interval: 5s
      retries: 5

  # Standalone Airflow
  airflow-standalone:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow-standalone
    ports:
      - "8080:8080"
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://admin:admin@postgres:5432/airflow_db
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__WEBSERVER__SECRET_KEY: 'simple-key'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__AUTH_MANAGER: airflow.auth.managers.fab.fab_auth_manager.FabAuthManager
      # MariaDB connection details
      MARIADB_HOST: mariadb-columnstore
      MARIADB_PORT: 3306
      MARIADB_DATABASE: stellar_db
      MARIADB_USER: stellar_user
      MARIADB_PASSWORD: stellar_user_password
    depends_on:
      postgres:
        condition: service_healthy
      mariadb-columnstore:
        condition: service_healthy
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data
      - ./data/temp:/opt/airflow/data/temp
      - ./data/processed:/opt/airflow/data/processed
      - ./models:/opt/airflow/models
      - ./config:/opt/airflow/config
    working_dir: /opt/airflow
    command: >
      bash -c "
        pip install psycopg2-binary &&
        airflow db init &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com &&
        airflow scheduler &
        airflow webserver --port 8080
      "
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # FastAPI service
  fastapi-app:
    image: python:3.9-slim
    container_name: stellar-fastapi
    ports:
      - "8000:8000"
    environment:
      # MariaDB connection details
      MARIADB_HOST: mariadb-columnstore
      MARIADB_PORT: 3306
      MARIADB_DATABASE: stellar_db
      MARIADB_USER: stellar_user
      MARIADB_PASSWORD: stellar_user_password
      # Python settings for better compatibility
      PYTHONUNBUFFERED: 1
      PIP_NO_CACHE_DIR: 1
      PIP_DISABLE_PIP_VERSION_CHECK: 1
    volumes:
      - ./api:/app/api
      - ./models:/app/models
      - ./src:/app/src
    working_dir: /app
    command: >
      bash -c "
        set -e &&
        echo 'Installing Python packages...' &&
        apt-get update -qq &&
        apt-get install -y -qq gcc g++ curl &&
        pip install --upgrade pip &&
        pip install fastapi uvicorn pandas numpy scikit-learn joblib pyyaml mysql-connector-python &&
        echo 'Starting FastAPI server...' &&
        uvicorn api.stellar_main:app --host 0.0.0.0 --port 8000 --reload
      "
    restart: unless-stopped
    depends_on:
      mariadb-columnstore:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # MLflow for experiment tracking
  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.12.1
    container_name: stellar-mlflow
    ports:
      - "5000:5000"
    command: mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri sqlite:///mlflow.db --default-artifact-root ./artifacts
    volumes:
      - ./mlflow_data:/mlflow
    restart: always

# Volumes for persistent data storage
volumes:
  mariadb_data:
    driver: local
  postgres_data:
    driver: local